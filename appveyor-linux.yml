os:
  - "Ubuntu"

environment:
  CA_KEY:
    secure: coNAepwqm5KC1dqYwQvxPxw/qvxI7RuhCBTHZujJUufj3pI+KqIOCKs5Z86uzHvf

branches:
  only:
    - master

init:

install:
  - ps: |
      Install-Module Pester -MinimumVersion 4.0.8 -MaximumVersion 4.99.99 -Scope CurrentUser -Force | Out-Null
      "Git version: $(git --version)"
      "PSVersion:   $($PSVersionTable.PSVersion), build: $($PSVersionTable.BuildVersion), clr version: $($PSVersionTable.ClrVersion)"
      "Host name:   $($Host.Name)"

build: false

# Coveralls doesn't install cleanly on linux because of casing issues.
# The module is registered on PS Gallery as "coveralls", but the module file is "Coveralls.psd1"
# so PS on linux won't find it. Explicitly import the module instead
before_test:
  - ps: Install-Module Coveralls -MinimumVersion 1.0.25 -MaximumVersion 1.0.25 -Scope CurrentUser -Force
  - ps: Import-Module (Resolve-Path "~/.local/share/powershell/Modules/coveralls/1.0.25/Coveralls.psd1")

test_script:
  - ps: |
      $testResultsFile = Join-Path $Env:APPVEYOR_BUILD_FOLDER TestResults.xml
      $pesterParams = @{
          Script       = "$Env:APPVEYOR_BUILD_FOLDER\test"
          OutputFile   = $testResultsFile
          OutputFormat = "NUnitXml"
          PassThru     = $true
          Verbose      = $VerbosePreference
      }
      Import-Module Pester
      $res = Invoke-Pester @pesterParams
      if (Test-Path $testResultsFile) {
          (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", $testResultsFile)
      }
      if ($res.FailedCount -gt 0) {
          # Terminate the script to fail the build
          $Error | Format-List * -Force
          exit 1;
      }
      $ErrorActionPreference = 'Stop'
      if (!(Test-Path Env:CA_KEY)) {
          Write-Host 'CA_KEY not set! (Expected on PR builds.)'
          return;
      }
      $coverageResult = Format-Coverage -Include (@(gci *.psm1) + @(gci src/*.ps1)) -CoverallsApiToken $ENV:CA_KEY -RootFolder ../ -BranchName $ENV:APPVEYOR_REPO_BRANCH
      Publish-Coverage -Coverage $coverageResult
